%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.0
%%CreationDate: Sat Apr  1 01:51:39 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGGUGGCGGUAGGGUUUAAUUAGCUGCCGACUCAUUCAUUCAAAUACUGAGUCAAAAAUUCAUCUCUAUGGAUUCAGUAAACGAUUGAAUGAUGCGGGAGACAAAUUGAAUCUUAAGCUUCCUG\
) def
/coor [
[81.084 466.942]
[87.130 451.102]
[87.130 436.102]
[87.130 421.102]
[79.393 408.375]
[87.130 394.575]
[87.130 379.575]
[87.130 364.575]
[78.768 355.740]
[78.710 343.172]
[87.538 333.670]
[87.912 318.675]
[88.286 303.680]
[88.660 288.684]
[89.034 273.689]
[89.408 258.694]
[89.782 243.698]
[90.156 228.703]
[90.530 213.708]
[90.904 198.712]
[91.278 183.717]
[91.652 168.722]
[84.234 155.805]
[92.313 142.202]
[92.500 127.203]
[92.500 112.203]
[85.676 100.000]
[92.500 87.797]
[92.500 72.797]
[92.500 57.797]
[81.605 46.663]
[81.819 31.451]
[92.500 21.134]
[92.500 6.134]
[92.500 -8.866]
[92.500 -23.866]
[92.500 -38.866]
[92.500 -53.866]
[92.500 -68.866]
[84.763 -82.667]
[92.500 -95.394]
[92.500 -110.394]
[80.115 -119.555]
[75.552 -134.082]
[80.362 -148.341]
[92.500 -156.932]
[92.500 -171.932]
[92.500 -186.932]
[92.500 -201.932]
[92.500 -216.932]
[92.500 -231.932]
[92.500 -246.932]
[92.500 -261.932]
[92.500 -276.932]
[84.851 -282.773]
[80.868 -291.382]
[81.353 -300.717]
[86.065 -308.629]
[93.804 -313.357]
[94.925 -328.315]
[83.002 -338.245]
[79.225 -353.296]
[85.047 -367.679]
[98.229 -375.865]
[113.703 -374.705]
[125.518 -364.646]
[129.132 -349.556]
[123.154 -335.236]
[109.883 -327.194]
[108.762 -312.236]
[119.435 -294.642]
[107.500 -276.932]
[107.500 -261.932]
[107.500 -246.932]
[107.500 -231.932]
[107.500 -216.932]
[107.500 -201.932]
[107.500 -186.932]
[107.500 -171.932]
[107.500 -156.932]
[119.638 -148.341]
[124.448 -134.082]
[119.885 -119.555]
[107.500 -110.394]
[107.500 -95.394]
[115.237 -82.667]
[107.500 -68.866]
[107.500 -53.866]
[107.500 -38.866]
[107.500 -23.866]
[107.500 -8.866]
[107.500 6.134]
[107.500 21.134]
[118.181 31.451]
[118.395 46.663]
[107.500 57.797]
[107.500 72.797]
[107.500 87.797]
[114.324 100.000]
[107.500 112.203]
[107.500 127.203]
[110.657 135.895]
[107.308 142.576]
[114.699 156.565]
[106.647 169.095]
[106.273 184.091]
[105.899 199.086]
[105.525 214.082]
[105.151 229.077]
[104.777 244.072]
[104.403 259.068]
[104.029 274.063]
[103.655 289.058]
[103.281 304.054]
[102.907 319.049]
[102.533 334.044]
[111.728 349.940]
[102.130 364.575]
[102.130 379.575]
[102.130 394.575]
[109.867 408.375]
[102.130 421.102]
[102.130 436.102]
[102.130 451.102]
[108.176 466.942]
] def
/pairs [
[2 124]
[3 123]
[4 122]
[6 120]
[7 119]
[8 118]
[11 116]
[12 115]
[13 114]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[20 107]
[21 106]
[22 105]
[24 103]
[25 101]
[26 100]
[28 98]
[29 97]
[30 96]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[41 85]
[42 84]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[59 70]
[60 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
