%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.0
%%CreationDate: Sat Apr  1 01:51:34 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGAUCUUCUAGGACAAUGAUCGGCCUUUGGGCUGGAUGAUCUUCUUGGGUGAUCGGUCUUUAGGCUUAUUGAUCUUCUUGGAUGAUGAUCGGCGUUUGGGCUUGAUGAUUUUCUUGGGUGAUCA\
) def
/coor [
[89.003 514.446]
[95.050 498.606]
[95.050 483.606]
[95.050 468.606]
[95.050 453.606]
[87.312 440.879]
[95.050 427.079]
[95.050 412.079]
[95.050 397.079]
[95.050 382.079]
[95.050 367.079]
[95.050 352.079]
[95.050 337.079]
[87.312 324.352]
[95.050 310.552]
[95.050 295.552]
[95.050 280.552]
[87.312 267.824]
[95.050 254.024]
[95.050 239.024]
[95.050 224.024]
[95.050 209.024]
[94.861 194.025]
[94.484 179.030]
[94.107 164.035]
[93.730 149.039]
[82.794 138.993]
[82.198 123.792]
[92.809 112.388]
[85.681 100.360]
[92.196 87.989]
[91.819 72.994]
[91.442 57.998]
[91.065 43.003]
[87.690 34.392]
[90.872 27.627]
[90.872 12.627]
[83.134 -1.173]
[90.872 -13.900]
[90.872 -28.900]
[90.872 -43.900]
[83.134 -57.700]
[90.872 -70.428]
[90.872 -85.428]
[90.872 -100.428]
[83.134 -114.228]
[90.872 -126.955]
[90.872 -141.955]
[90.872 -156.955]
[83.134 -170.755]
[90.872 -183.482]
[90.872 -198.482]
[90.872 -213.482]
[90.872 -228.482]
[90.118 -243.464]
[88.613 -258.388]
[87.107 -273.312]
[85.602 -288.236]
[75.584 -301.220]
[82.069 -316.283]
[98.386 -317.929]
[107.748 -304.465]
[100.526 -289.742]
[102.031 -274.818]
[103.537 -259.893]
[105.042 -244.969]
[107.249 -243.072]
[108.794 -240.138]
[109.257 -236.431]
[108.331 -232.371]
[105.872 -228.482]
[105.872 -213.482]
[105.872 -198.482]
[105.872 -183.482]
[113.609 -170.755]
[105.872 -156.955]
[105.872 -141.955]
[105.872 -126.955]
[113.609 -114.228]
[105.872 -100.428]
[105.872 -85.428]
[105.872 -70.428]
[113.609 -57.700]
[105.872 -43.900]
[105.872 -28.900]
[105.872 -13.900]
[113.609 -1.173]
[105.872 12.627]
[105.872 27.627]
[106.060 42.626]
[106.437 57.621]
[106.814 72.617]
[107.191 87.612]
[114.319 99.640]
[107.804 112.011]
[118.975 122.867]
[119.144 138.080]
[108.726 148.663]
[109.103 163.658]
[109.480 178.653]
[109.857 193.648]
[113.232 202.260]
[110.050 209.024]
[110.050 224.024]
[110.050 239.024]
[110.050 254.024]
[117.787 267.824]
[110.050 280.552]
[110.050 295.552]
[110.050 310.552]
[117.787 324.352]
[110.050 337.079]
[110.050 352.079]
[110.050 367.079]
[110.050 382.079]
[110.050 397.079]
[110.050 412.079]
[110.050 427.079]
[117.787 440.879]
[110.050 453.606]
[110.050 468.606]
[110.050 483.606]
[110.050 498.606]
[116.096 514.446]
] def
/pairs [
[2 123]
[3 122]
[4 121]
[5 120]
[7 118]
[8 117]
[9 116]
[10 115]
[11 114]
[12 113]
[13 112]
[15 110]
[16 109]
[17 108]
[19 106]
[20 105]
[21 104]
[22 103]
[23 101]
[24 100]
[25 99]
[26 98]
[29 95]
[31 93]
[32 92]
[33 91]
[34 90]
[36 89]
[37 88]
[39 86]
[40 85]
[41 84]
[43 82]
[44 81]
[45 80]
[47 78]
[48 77]
[49 76]
[51 74]
[52 73]
[53 72]
[54 71]
[55 66]
[56 65]
[57 64]
[58 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
