%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.0
%%CreationDate: Sat Apr  1 01:51:37 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AACCGUCUCGUUUAGAUUAACACCACGCAAAAACCUCAAAUUUUCAUGAGCACCAUAAUGAACCCUAAGUUCUGCUCAUGACAAUUUAAGGUUUUUGCAUGGUGUUGGUCUGAACGAGACGGUU\
) def
/coor [
[92.500 633.731]
[92.500 618.731]
[92.500 603.731]
[92.500 588.731]
[92.500 573.731]
[92.500 558.731]
[92.500 543.731]
[92.500 528.731]
[92.500 513.731]
[92.500 498.731]
[92.500 483.731]
[92.500 468.731]
[92.500 453.731]
[92.500 438.731]
[92.500 423.731]
[92.500 408.731]
[92.500 393.731]
[92.500 378.731]
[92.500 363.731]
[92.500 348.731]
[92.500 333.731]
[92.500 318.731]
[92.500 303.731]
[92.500 288.731]
[92.500 273.731]
[84.763 261.004]
[92.500 247.204]
[92.500 232.204]
[92.500 217.204]
[92.500 202.204]
[92.500 187.204]
[92.500 172.204]
[92.500 157.204]
[92.500 142.204]
[92.500 127.203]
[92.500 112.203]
[85.676 100.000]
[92.500 87.797]
[92.500 72.797]
[92.500 57.797]
[92.500 42.797]
[92.500 27.797]
[84.763 13.996]
[92.500 1.269]
[92.500 -13.731]
[92.500 -28.731]
[92.500 -43.731]
[92.500 -58.731]
[92.500 -73.731]
[92.500 -88.731]
[92.500 -103.731]
[92.500 -118.731]
[81.377 -108.667]
[66.397 -107.896]
[54.300 -116.765]
[50.530 -131.284]
[56.782 -144.919]
[70.245 -151.534]
[84.859 -148.154]
[94.049 -136.298]
[96.675 -151.067]
[99.300 -165.835]
[101.925 -180.604]
[93.958 -194.528]
[100.010 -209.386]
[115.440 -213.779]
[128.411 -204.337]
[128.972 -188.304]
[116.694 -177.978]
[114.068 -163.210]
[111.443 -148.441]
[108.818 -133.673]
[107.500 -118.731]
[107.500 -103.731]
[107.500 -88.731]
[107.500 -73.731]
[107.500 -58.731]
[107.500 -43.731]
[107.500 -28.731]
[107.500 -13.731]
[107.500 1.269]
[115.237 13.996]
[107.500 27.797]
[107.500 42.797]
[107.500 57.797]
[107.500 72.797]
[107.500 87.797]
[114.324 100.000]
[107.500 112.203]
[107.500 127.203]
[107.500 142.204]
[107.500 157.204]
[107.500 172.204]
[107.500 187.204]
[107.500 202.204]
[107.500 217.204]
[107.500 232.204]
[107.500 247.204]
[115.237 261.004]
[107.500 273.731]
[107.500 288.731]
[107.500 303.731]
[107.500 318.731]
[107.500 333.731]
[107.500 348.731]
[107.500 363.731]
[107.500 378.731]
[107.500 393.731]
[107.500 408.731]
[107.500 423.731]
[107.500 438.731]
[107.500 453.731]
[107.500 468.731]
[107.500 483.731]
[107.500 498.731]
[107.500 513.731]
[107.500 528.731]
[107.500 543.731]
[107.500 558.731]
[107.500 573.731]
[107.500 588.731]
[107.500 603.731]
[107.500 618.731]
[107.500 633.731]
] def
/pairs [
[1 124]
[2 123]
[3 122]
[4 121]
[5 120]
[6 119]
[7 118]
[8 117]
[9 116]
[10 115]
[11 114]
[12 113]
[13 112]
[14 111]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[38 87]
[39 86]
[40 85]
[41 84]
[42 83]
[44 81]
[45 80]
[46 79]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[60 72]
[61 71]
[62 70]
[63 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
